[
    {
        "label": "NinjaAPI",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "Router",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "ModelSchema",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "Router",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "ModelSchema",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "Schema",
        "importPath": "ninja",
        "description": "ninja",
        "isExtraImport": true,
        "detail": "ninja",
        "documentation": {}
    },
    {
        "label": "users_router",
        "importPath": "users.api",
        "description": "users.api",
        "isExtraImport": true,
        "detail": "users.api",
        "documentation": {}
    },
    {
        "label": "payments_router",
        "importPath": "payments.api",
        "description": "payments.api",
        "isExtraImport": true,
        "detail": "payments.api",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "AbstractUserRole",
        "importPath": "rolepermissions.roles",
        "description": "rolepermissions.roles",
        "isExtraImport": true,
        "detail": "rolepermissions.roles",
        "documentation": {}
    },
    {
        "label": "assign_role",
        "importPath": "rolepermissions.roles",
        "description": "rolepermissions.roles",
        "isExtraImport": true,
        "detail": "rolepermissions.roles",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "transaction",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "has_permission",
        "importPath": "rolepermissions.checkers",
        "description": "rolepermissions.checkers",
        "isExtraImport": true,
        "detail": "rolepermissions.checkers",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "users.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "users.validators",
        "description": "users.validators",
        "detail": "users.validators",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.core.exceptions",
        "description": "django.core.exceptions",
        "isExtraImport": true,
        "detail": "django.core.exceptions",
        "documentation": {}
    },
    {
        "label": "make_password",
        "importPath": "django.contrib.auth.hashers",
        "description": "django.contrib.auth.hashers",
        "isExtraImport": true,
        "detail": "django.contrib.auth.hashers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "api",
        "kind": 5,
        "importPath": "core.api",
        "description": "core.api",
        "peekOfCode": "api = NinjaAPI()\napi.add_router('users/', users_router)\napi.add_router('payments/', payments_router)",
        "detail": "core.api",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "People",
        "kind": 6,
        "importPath": "core.roles",
        "description": "core.roles",
        "peekOfCode": "class People(AbstractUserRole):\n    available_permissions = {\n        'make_transfer': True,\n        'receive_transfer': True\n    }\nclass Company(AbstractUserRole):\n    available_permissions = {\n        'make_transfer': False,\n        'receive_transfer': True\n    }",
        "detail": "core.roles",
        "documentation": {}
    },
    {
        "label": "Company",
        "kind": 6,
        "importPath": "core.roles",
        "description": "core.roles",
        "peekOfCode": "class Company(AbstractUserRole):\n    available_permissions = {\n        'make_transfer': False,\n        'receive_transfer': True\n    }",
        "detail": "core.roles",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-tn7firw0_yqbx%y%v1$xn*he@(v5w+%+7-5ofy1fgo4+q5!!w&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-tn7firw0_yqbx%y%v1$xn*he@(v5w+%+7-5ofy1fgo4+q5!!w&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rolepermissions',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rolepermissions',\n    'users',\n    'payments',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'core.urls'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = 'pt-BR'\nTIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = 'America/Sao_Paulo'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'\nROLEPERMISSIONS_MODULE = 'core.roles'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'\nROLEPERMISSIONS_MODULE = 'core.roles'\nAUTHORIZE_TRANSFER_ENDPOINT = 'https://run.mocky.io/v3/982c6f8f-6c14-445d-be0a-a08db4c8813b'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'\nROLEPERMISSIONS_MODULE = 'core.roles'\nAUTHORIZE_TRANSFER_ENDPOINT = 'https://run.mocky.io/v3/982c6f8f-6c14-445d-be0a-a08db4c8813b'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'\nROLEPERMISSIONS_MODULE = 'core.roles'\nAUTHORIZE_TRANSFER_ENDPOINT = 'https://run.mocky.io/v3/982c6f8f-6c14-445d-be0a-a08db4c8813b'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'\nROLEPERMISSIONS_MODULE = 'core.roles'\nAUTHORIZE_TRANSFER_ENDPOINT = 'https://run.mocky.io/v3/982c6f8f-6c14-445d-be0a-a08db4c8813b'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROLEPERMISSIONS_MODULE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROLEPERMISSIONS_MODULE = 'core.roles'\nAUTHORIZE_TRANSFER_ENDPOINT = 'https://run.mocky.io/v3/982c6f8f-6c14-445d-be0a-a08db4c8813b'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTHORIZE_TRANSFER_ENDPOINT",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTHORIZE_TRANSFER_ENDPOINT = 'https://run.mocky.io/v3/982c6f8f-6c14-445d-be0a-a08db4c8813b'",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('api/', api.urls)\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "payments.migrations.0001_initial",
        "description": "payments.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Transaction',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "payments.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "transaction",
        "kind": 2,
        "importPath": "payments.api",
        "description": "payments.api",
        "peekOfCode": "def transaction(request, transaction: TransactionSchema):\n    payer = get_object_or_404(User, id=transaction.payer)\n    payee = get_object_or_404(User, id=transaction.payer)\n    if payer.amount < transaction.amount:\n        return 400, {'error': 'Insufficient funds'}\n    if not has_permission(payer, 'make_transfer'):\n        return 403, {'error': 'User does not have permission to perform transfers'}\n    if not has_permission(payee, 'receive_transfer'):\n        return 403, {'error': 'User cannot receive transfers'}\n    with django_transaction.atomic():",
        "detail": "payments.api",
        "documentation": {}
    },
    {
        "label": "payments_router",
        "kind": 5,
        "importPath": "payments.api",
        "description": "payments.api",
        "peekOfCode": "payments_router = Router()\n@payments_router.post('/', response={200: dict, 400: dict, 403: dict})\ndef transaction(request, transaction: TransactionSchema):\n    payer = get_object_or_404(User, id=transaction.payer)\n    payee = get_object_or_404(User, id=transaction.payer)\n    if payer.amount < transaction.amount:\n        return 400, {'error': 'Insufficient funds'}\n    if not has_permission(payer, 'make_transfer'):\n        return 403, {'error': 'User does not have permission to perform transfers'}\n    if not has_permission(payee, 'receive_transfer'):",
        "detail": "payments.api",
        "documentation": {}
    },
    {
        "label": "PaymentsConfig",
        "kind": 6,
        "importPath": "payments.apps",
        "description": "payments.apps",
        "peekOfCode": "class PaymentsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'payments'",
        "detail": "payments.apps",
        "documentation": {}
    },
    {
        "label": "Transaction",
        "kind": 6,
        "importPath": "payments.models",
        "description": "payments.models",
        "peekOfCode": "class Transaction(models.Model):\n    amount = models.DecimalField(\n        max_digits=15, decimal_places=2, default=Decimal('0.00'), editable=False\n    )\n    payer = models.ForeignKey(\n        User,\n        related_name='payer_transactions',\n        on_delete=models.CASCADE,\n        editable=False,\n    )",
        "detail": "payments.models",
        "documentation": {}
    },
    {
        "label": "TransactionSchema",
        "kind": 6,
        "importPath": "payments.schemas",
        "description": "payments.schemas",
        "peekOfCode": "class TransactionSchema(ModelSchema):\n    class Meta:\n        model = Transaction\n        exclude = ['id', 'date']",
        "detail": "payments.schemas",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0001_initial",
        "description": "users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0002_alter_user_amount",
        "description": "users.migrations.0002_alter_user_amount",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('users', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='amount',\n            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15),\n        ),",
        "detail": "users.migrations.0002_alter_user_amount",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "users.migrations.0003_alter_user_cpf",
        "description": "users.migrations.0003_alter_user_cpf",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('users', '0002_alter_user_amount'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='user',\n            name='cpf',\n            field=models.CharField(max_length=14, unique=True, validators=[users.validators.validate_cpf]),\n        ),",
        "detail": "users.migrations.0003_alter_user_cpf",
        "documentation": {}
    },
    {
        "label": "create_user",
        "kind": 2,
        "importPath": "users.api",
        "description": "users.api",
        "peekOfCode": "def create_user(request, type_user_schema: TypeUserSchema):\n    user = User(**type_user_schema.user.dict())\n    user.password = make_password(type_user_schema.user.password)\n    try:\n        user.full_clean()\n        user.save()\n        assign_role(user, type_user_schema.type_user.type)\n    except ValidationError as err:\n        return 400, {'error': err.message_dict}\n    except Exception as err:",
        "detail": "users.api",
        "documentation": {}
    },
    {
        "label": "users_router",
        "kind": 5,
        "importPath": "users.api",
        "description": "users.api",
        "peekOfCode": "users_router = Router()\n@users_router.post('/', response={200: dict, 400: dict, 500: dict})\ndef create_user(request, type_user_schema: TypeUserSchema):\n    user = User(**type_user_schema.user.dict())\n    user.password = make_password(type_user_schema.user.password)\n    try:\n        user.full_clean()\n        user.save()\n        assign_role(user, type_user_schema.type_user.type)\n    except ValidationError as err:",
        "detail": "users.api",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "users.apps",
        "description": "users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "users.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "users.models",
        "description": "users.models",
        "peekOfCode": "class User(AbstractUser):\n    cpf = models.CharField(max_length=14, unique=True, validators=[validate_cpf])\n    email = models.EmailField(unique=True)\n    amount = models.DecimalField(max_digits=15, decimal_places=2, default=Decimal('0.00'))\n    def save(self, *args, **kwargs):\n        self.cpf = self.cpf.replace('.', '').replace('-', '')\n        super(User, self).save(*args, **kwargs)\n    def pay(self, value: Decimal):\n        if not isinstance(value, Decimal):\n            raise TypeError('Value must be a Decimal.')",
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "UserSchema",
        "kind": 6,
        "importPath": "users.schemas",
        "description": "users.schemas",
        "peekOfCode": "class UserSchema(ModelSchema):\n    class Meta:\n        model = User\n        fields = ['username','first_name', 'last_name', 'cpf', 'email', 'password']\nclass TypeSchema(Schema):\n    type: str\nclass TypeUserSchema(Schema):\n    user: UserSchema\n    type_user: TypeSchema",
        "detail": "users.schemas",
        "documentation": {}
    },
    {
        "label": "TypeSchema",
        "kind": 6,
        "importPath": "users.schemas",
        "description": "users.schemas",
        "peekOfCode": "class TypeSchema(Schema):\n    type: str\nclass TypeUserSchema(Schema):\n    user: UserSchema\n    type_user: TypeSchema",
        "detail": "users.schemas",
        "documentation": {}
    },
    {
        "label": "TypeUserSchema",
        "kind": 6,
        "importPath": "users.schemas",
        "description": "users.schemas",
        "peekOfCode": "class TypeUserSchema(Schema):\n    user: UserSchema\n    type_user: TypeSchema",
        "detail": "users.schemas",
        "documentation": {}
    },
    {
        "label": "validate_cpf",
        "kind": 2,
        "importPath": "users.validators",
        "description": "users.validators",
        "peekOfCode": "def validate_cpf(value):\n    cpf = ''.join([char for char in value if char.isdigit()])\n    if len(cpf) != 11:\n        raise ValidationError('invalid CPF.')\n    if cpf == cpf[0] * 11:\n        raise ValidationError('invalid CPF.')\n    def calculate_digit(cpf, multipliers):\n        soma = sum(\n            int(cpf[i]) * multipliers[i]\n            for i in range(len(multipliers))",
        "detail": "users.validators",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]